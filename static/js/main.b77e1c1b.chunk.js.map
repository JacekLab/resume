{"version":3,"sources":["hoc/Auxiliary.js","components/Book/Book.js","components/BookOnHover/BookOnHover.js","components/BookClicked/BookClicked.js","containers/BookShelf/BookShelf.js","App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","Book","title","onEnter","onLeave","clicked","wrapperStyles","coverStyles","checkHeight","textStyles","titleAdjusted","bookHeight","slice","className","style","onMouseEnter","onMouseLeave","onClick","length","BookOnHover","book","authorName","authorSurname","BookClicked","id","src","cover","alt","icon","faTimes","pages","genre","status","faBook","color","faBookReader","faCalendar","statusIcon","bookStatus","impressions_en","faQuoteRight","BookShelf","state","bookStart","bookEnd","bookHovered","bookClicked","totalPages","booksToShow","booksToShowLength","books","myLibrary","Books","totalPagesStart","map","reduce","a","b","setState","bookFormat","handleHover","bookTitle","hoveredBookIndex","indexOf","handlePreviousBooks","oldStart","oldEnd","currentStart","currentEnd","currentBooks","currentTotalPages","handleNextBooks","handleBookClicked","cilckedBookIndex","additionalPadding","booksLength","booksMissing","padding","this","window","innerWidth","booksMissingOnShelf","type","name","faChevronLeft","key","width","height","format","backgroundImage","backgroundSize","faChevronRight","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b77e1c1b.chunk.js","sourcesContent":["const Aux = props => props.children;\r\n\r\nexport default Aux;","import React from \"react\";\r\n\r\nimport \"./Book.css\";\r\n\r\nconst Book = ({\r\n  title,\r\n  onEnter,\r\n  onLeave,\r\n  clicked,\r\n  wrapperStyles,\r\n  coverStyles,\r\n  textStyles,\r\n  checkHeight,\r\n}) => {\r\n\r\n  const titleAdjusted = (bookHeight) => {\r\n      switch(bookHeight) {\r\n        case \"11rem\":\r\n            return title.slice(0, 17);\r\n        case \"12rem\":\r\n            return title.slice(0, 22);\r\n        case \"13rem\":\r\n          return title.slice(0, 24);\r\n        default:\r\n          return 20;\r\n      }\r\n  } \r\n\r\n  return (\r\n    <div \r\n      className=\"BookWrapper\"\r\n      style={wrapperStyles}\r\n    >\r\n      <div\r\n        className=\"Book\"\r\n        style={coverStyles}\r\n      >\r\n      </div>\r\n      <div \r\n        onMouseEnter={() => onEnter(title)}\r\n        onMouseLeave={() => onLeave(null)}\r\n        onClick={() => clicked(title)}\r\n        className=\"BookTitle\" >\r\n        {titleAdjusted(checkHeight)}\r\n        {titleAdjusted(checkHeight).length < title.length ? \" ...\" : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\nimport \"./BookOnHover.css\";\r\n\r\nconst BookOnHover = ({ book }) => {\r\n  return (\r\n    <div className=\"BookOnHover\">\r\n      {/* <p>\r\n      <span>Tytu≈Ç: </span>{book.title}</p>\r\n      <p><span>Autor: </span>{book.authorName} {book.authorSurname}</p>\r\n      <p><span>Liczba stron: </span>{book.pages} </p> */}\r\n\r\n      <p>\r\n        {book.title.length > 25 ? `${book.title.slice(0, 24)}...` : book.title},{\" \"}\r\n        {book.authorName} {book.authorSurname}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookOnHover;\r\n","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\n\r\nimport './BookClicked.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faQuoteRight, faBook, faBookReader, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst BookClicked = ({ book, clicked }) => {\r\n  \r\n  const bookStatus = status => {\r\n    switch(status) {\r\n      case \"Read\":\r\n    return \" Read\";\r\n      case \"Being read\":\r\n    return \" Being read\";\r\n      case \"Planned to read\":\r\n    return \" Planned to read\";\r\n      default:\r\n        return \"Read\"\r\n    }\r\n  }\r\n\r\n  const statusIcon = status => {\r\n    switch(status) {\r\n      case \"Read\":\r\n    return <FontAwesomeIcon icon={faBook} style={{color: \"var(--sec-col)\"}} />;\r\n      case \"Being read\":\r\n    return <FontAwesomeIcon icon={faBookReader} style={{color: \"var(--sec-col)\"}}/>;\r\n      case \"Planned to read\":\r\n    return <FontAwesomeIcon icon={faCalendar} style={{color: \"var(--sec-col)\"}}/>;\r\n      default:\r\n        return \"Read\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"BookClicked\" id=\"BookClicked\">\r\n      <div className=\"BookImgAndMainDetails__wrapper\">\r\n        <div className=\"BookImgWrapper\">\r\n          <img \r\n            src={`/assets/book-covers/${book.cover}`} \r\n            alt={`Cover of a \"${book.title}\"`} \r\n          />\r\n        </div>\r\n        <div className=\"MainDetails\">\r\n          <button className=\"ShelfButton CloseBook\">\r\n            <FontAwesomeIcon \r\n              onClick={() => clicked(null)}\r\n              icon={faTimes} />\r\n          </button>\r\n          <p><span>Title:</span> {book.title}, {`p. ${book.pages}`}</p>\r\n          <p><span>Author:</span> {book.authorName} {book.authorSurname}</p>\r\n          <p><span>Genre:</span>{` ${book.genre}`}</p>\r\n          <p>\r\n          {statusIcon(book.status)}\r\n          <span>{bookStatus(book.status)}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"MoreDetails\">\r\n        { book.impressions_en.length > 0 ?\r\n          (<Aux>\r\n            <FontAwesomeIcon icon={faQuoteRight} />\r\n            <p>{book.impressions_en}</p>\r\n          </Aux>)\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookClicked\r\n","import React from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport Book from \"../../components/Book/Book\";\r\nimport BookOnHover from \"../../components/BookOnHover/BookOnHover\";\r\nimport BookClicked from \"../../components/BookClicked/BookClicked\";\r\n\r\nimport \"./BookShelf.css\";\r\nimport \"../../components/Book/Book.css\";\r\nimport myLibrary from \"../../data/books.json\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass BookShelf extends React.Component {\r\n  state = {\r\n    bookStart: 0,\r\n    bookEnd: 5,\r\n    bookHovered: null,\r\n    bookClicked: null,\r\n    totalPages: null,\r\n    booksToShow: null,\r\n    booksToShowLength: null\r\n  };\r\n\r\n  books = myLibrary.Books;\r\n\r\n  totalPagesStart = () => {\r\n    const totalPagesStart = this.books\r\n      .map(book => book.pages)\r\n      .slice(this.state.bookStart, this.state.bookEnd)\r\n      .reduce((a, b) => a + b);\r\n\r\n    this.setState({ totalPages: totalPagesStart });\r\n  };\r\n\r\n  checkHeight = bookFormat => {\r\n    switch (bookFormat) {\r\n      case \"big\":\r\n        return \"13rem\";\r\n      case \"medium\":\r\n        return \"12rem\";\r\n      case \"small\":\r\n        return \"11rem\";\r\n      default:\r\n        return \"11rem\";\r\n    }\r\n  };\r\n\r\n  handleHover = bookTitle => {\r\n    const hoveredBookIndex = this.books\r\n      .map(book => book.title)\r\n      .indexOf(bookTitle);\r\n\r\n    if (bookTitle !== null) {\r\n      this.setState({ bookHovered: hoveredBookIndex });\r\n    } else {\r\n      this.setState({ bookHovered: null });\r\n    }\r\n    // console.log(bookTitle)\r\n  };\r\n\r\n  handlePreviousBooks = () => {\r\n    const oldStart = this.state.bookStart;\r\n    const oldEnd = this.state.bookEnd;\r\n    const booksToShow = this.state.booksToShow;\r\n    const currentStart = oldStart - booksToShow;\r\n    const currentEnd = oldEnd - booksToShow;\r\n\r\n    if (oldStart >= booksToShow) {\r\n      const currentBooks = this.books.slice(currentStart, currentEnd);\r\n      const currentTotalPages = currentBooks\r\n        .map(book => book.pages)\r\n        .reduce((a, b) => a + b);\r\n      const booksToShowLength = currentBooks.length;\r\n\r\n      this.setState({\r\n        bookStart: currentStart,\r\n        bookEnd: currentEnd,\r\n        totalPages: currentTotalPages,\r\n        booksToShowLength\r\n      });\r\n    }\r\n  };\r\n\r\n  handleNextBooks = () => {\r\n    const oldStart = this.state.bookStart;\r\n    const oldEnd = this.state.bookEnd;\r\n    const booksToShow = this.state.booksToShow;\r\n    const currentStart = oldStart + booksToShow;\r\n    const currentEnd = oldEnd + booksToShow;\r\n\r\n    if (oldStart < this.books.length - booksToShow) {\r\n      const currentBooks = this.books.slice(currentStart, currentEnd);\r\n      const currentTotalPages = currentBooks\r\n        .map(book => book.pages)\r\n        .reduce((a, b) => a + b);\r\n      const booksToShowLength = currentBooks.length;\r\n\r\n      this.setState({\r\n        bookStart: currentStart,\r\n        bookEnd: currentEnd,\r\n        totalPages: currentTotalPages,\r\n        booksToShowLength\r\n      });\r\n    }\r\n  };\r\n\r\n  handleBookClicked = bookTitle => {\r\n    const cilckedBookIndex = this.books\r\n      .map(book => book.title)\r\n      .indexOf(bookTitle);\r\n\r\n    if (bookTitle !== null) {\r\n      this.setState({ bookClicked: cilckedBookIndex });\r\n    } else {\r\n      this.setState({ bookClicked: null });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.totalPagesStart();\r\n    const viewportDetected = window.innerWidth;\r\n    let booksToShow = null;\r\n\r\n    viewportDetected < 499 ? (booksToShow = 5) : (booksToShow = 10);\r\n\r\n    this.setState({ bookEnd: booksToShow, booksToShow });\r\n  }\r\n\r\n  additionalPadding = (books, booksLength, booksMissing) => {\r\n    if (books === 10) {\r\n      if (booksMissing > 0 && booksMissing < 10) {\r\n        return { padding: `0 ${(booksMissing / 2) * 10}%` };\r\n      }\r\n    } else if (books === 5) {\r\n      if (booksMissing > 0 && booksMissing < 5) {\r\n        return { padding: `0 ${(booksMissing / 2) * 20 + 10}%` };\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      bookStart,\r\n      bookEnd,\r\n      bookHovered,\r\n      bookClicked,\r\n      totalPages,\r\n      booksToShow,\r\n      booksToShowLength\r\n    } = this.state;\r\n    const currentBooks = this.books.slice(bookStart, bookEnd);\r\n    const booksMissingOnShelf = booksToShow - booksToShowLength;\r\n    return (\r\n      <Aux>\r\n        <div\r\n          className=\"BookShelf\"\r\n          style={this.additionalPadding(\r\n            booksToShow,\r\n            booksToShowLength,\r\n            booksMissingOnShelf\r\n          )}\r\n        >\r\n          {/* Book info on hover */}\r\n          <div>\r\n            {bookHovered !== null ? (\r\n              <BookOnHover book={this.books[bookHovered]} />\r\n            ) : null}\r\n          </div>\r\n          {/* previous books */}\r\n          <button\r\n            className=\"ShelfButton Previous\"\r\n            type=\"button\"\r\n            name=\"next 10\"\r\n            onClick={this.handlePreviousBooks}\r\n          >\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </button>\r\n          {/* Shelf */}\r\n          {currentBooks.map(book => {\r\n            return (\r\n              <Book\r\n                key={book.id}\r\n                title={book.title}\r\n                wrapperStyles={{\r\n                  width: `${(book.pages * 100) / totalPages}%`,\r\n                  height: this.checkHeight(book.format)\r\n                }}\r\n                coverStyles={{\r\n                  backgroundImage: `url('assets/book-covers/${book.cover}')`,\r\n                  backgroundSize: \"cover\",\r\n                  height: this.checkHeight(book.format)\r\n                }}\r\n                // textStyles={{color: book.color}}\r\n                onEnter={this.handleHover}\r\n                onLeave={this.handleHover}\r\n                clicked={this.handleBookClicked}\r\n                checkHeight={this.checkHeight(book.format)}\r\n              />\r\n            );\r\n          })}\r\n          {/* next books */}\r\n          <button\r\n            className=\"ShelfButton Next\"\r\n            type=\"button\"\r\n            name=\"next 10\"\r\n            onClick={this.handleNextBooks}\r\n          >\r\n            <FontAwesomeIcon icon={faChevronRight} />\r\n          </button>\r\n        </div>\r\n        <div className=\"BookShelfBottom\"></div>\r\n        {/* Book info on click */}\r\n        {bookClicked !== null ? (\r\n          <BookClicked\r\n            book={this.books[bookClicked]}\r\n            clicked={this.handleBookClicked}\r\n          />\r\n        ) : null}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelf;\r\n","import React from 'react';\n\nimport BookShelf from './containers/BookShelf/BookShelf';\n\nfunction App() {\n  return (\n    <div className=\"AppContainer\">\n      <BookShelf />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('bookshelf'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}